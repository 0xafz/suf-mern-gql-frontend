var ye=Object.defineProperty,ve=Object.defineProperties;var ge=Object.getOwnPropertyDescriptors;var W=Object.getOwnPropertySymbols;var ie=Object.prototype.hasOwnProperty,re=Object.prototype.propertyIsEnumerable;var oe=(e,n,r)=>n in e?ye(e,n,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[n]=r,A=(e,n)=>{for(var r in n||(n={}))ie.call(n,r)&&oe(e,r,n[r]);if(W)for(var r of W(n))re.call(n,r)&&oe(e,r,n[r]);return e},k=(e,n)=>ve(e,ge(n));var Y=(e,n)=>{var r={};for(var i in e)ie.call(e,i)&&n.indexOf(i)<0&&(r[i]=e[i]);if(e!=null&&W)for(var i of W(e))n.indexOf(i)<0&&re.call(e,i)&&(r[i]=e[i]);return r};import{O as J,s as K,_ as s,e as X,d as H,t as Z,v as ee,w as he,a as l,j as t,T as j,b as _e,F as we,m as me,A as P,h as B,x as L,y as V,z as se,C as R,E as ae,G as E,r as x,H as Se,J as fe,K as Ce,N as be,k as Ae,B as xe,V as G,P as De,Q as Qe,U as ke,W as Be,X as Ne,Y as Ee,Z as qe,$ as Ie,a0 as $e,a1 as Le,a2 as Te,a3 as ze,a4 as Me,u as Oe,a5 as Re,c as Ve,l as de,L as Ue}from"./index.d80fec5a.js";import{T as Fe}from"./Tag.0f572801.js";import{B as We}from"./PostedByUser.a31df72f.js";import{T as Pe}from"./Tag.ea8b26fd.js";const He=J({answerBody:K().min(30,"Must be at least 30 characters")}),je=({quesId:e,tags:n})=>{var v;const{user:r}=X(),{notify:i,clearEdit:o}=H(),{register:m,handleSubmit:h,reset:C,formState:{errors:y}}=Z({mode:"onChange",resolver:ee(He)}),[b,{loading:D}]=he({onError:p=>{i(B(p),"error")}});return l("div",{children:[r&&t(Ye,{children:"Your Answer"}),r&&l("form",{onSubmit:h(({answerBody:p})=>{b({variables:{quesId:e,body:p},update:(T,{data:q})=>{C();const z=T.readQuery({query:L,variables:{quesId:e}}),I=k(A({},z==null?void 0:z.viewQuestion),{answers:q==null?void 0:q.postAnswer});T.writeQuery({query:L,variables:{quesId:e},data:{viewQuestion:I}}),i("Answer submitted!")}})}),children:[t(j,k(A({tag:"textarea"},m("answerBody")),{name:"answerBody",required:!0,rows:5,fullWidth:!0,placeholder:"Enter atleast 30 characters",error:"answerBody"in y,helperText:"answerBody"in y?(v=y==null?void 0:y.answerBody)==null?void 0:v.message:""})),t("div",{children:t(_e,{style:{marginTop:"0.8em"},type:"submit",disabled:D,children:"Post Your Answer"})})]}),l(Ge,{children:["Browse other questions tagged \xA0",n.map(p=>t(Je,{label:p,to:`/tags/${p}`},p)),"\xA0 or \xA0",r?t(we,{children:t(me,{to:"/ask",onClick:()=>o(),children:"ask your own question."})}):t(P,{})]})]})};var Ye=s("h3").withConfig({displayName:"Form___StyledH",componentId:"sc-1h8r67h-0"})({"--tw-text-opacity":"1",color:"rgba(68, 51, 122, var(--tw-text-opacity))"}),Ge=s("div").withConfig({displayName:"Form___StyledDiv",componentId:"sc-1h8r67h-1"})({marginTop:"1rem",fontSize:"0.875rem","@media (min-width: 640px)":{fontSize:"1rem"}}),Je=s(Fe).withConfig({displayName:"Form___StyledTag",componentId:"sc-1h8r67h-2"})({marginRight:"0.25rem"});const Ke=(e,n,r)=>{if(n.length<2)return n;if(e==="OLDEST")return[...n].sort((i,o)=>new Date(i==null?void 0:i.createdAt).valueOf()-new Date(o==null?void 0:o.createdAt).valueOf());if(e==="NEWEST")return[...n].sort((i,o)=>new Date(o==null?void 0:o.createdAt).valueOf()-new Date(i==null?void 0:i.createdAt).valueOf());{const i=n.find(m=>(m==null?void 0:m._id)===r),o=n.filter(m=>(m==null?void 0:m._id)!==r).sort((m,h)=>h.points-m.points);return i?[i,...o]:o}},te=m=>{var h=m,{checkedIcon:e,checked:n,icon:r,onClick:i}=h,o=Y(h,["checkedIcon","checked","icon","onClick"]);return t(Xe,k(A({onClick:i},o),{$_css:[{padding:"9px",backgroundColor:"rgba(0, 0, 0, 0)",borderStyle:"none",textDecoration:"none",userSelect:"none",alignItems:"center",justifyContent:"center",verticalAlign:"middle",borderRadius:"50%",":hover":{"--tw-bg-opacity":"1",backgroundColor:"rgba(237, 242, 247, var(--tw-bg-opacity))"},":focus":{"--tw-bg-opacity":"1",backgroundColor:"rgba(237, 242, 247, var(--tw-bg-opacity))"},cursor:"pointer",outline:"2px solid transparent",outlineOffset:"2px",transitionProperty:"background-color, border-color, color, fill, stroke"}],children:n?e:r}))};var Xe=s("button").withConfig({displayName:"Checkbox___StyledButton",componentId:"sc-1u71f9m-0"})(["",""],e=>e.$_css);const Ze=({checked:e,handleUpvote:n})=>t(te,{checked:e,icon:t(tt,{children:t(se,{})}),checkedIcon:t(nt,{children:t(se,{})}),onClick:()=>n(R.Upvote)}),et=({checked:e,handleDownvote:n})=>t(te,{checked:e,icon:t(ot,{children:t(ae,{})}),checkedIcon:t(it,{children:t(ae,{})}),onClick:()=>n(R.Downvote)});var tt=s(V).withConfig({displayName:"Vote___StyledSvgIcon",componentId:"sc-adxtcd-0"})({"--tw-text-opacity":"1",color:"rgba(203, 213, 224, var(--tw-text-opacity))",fontSize:"32px"}),nt=s(V).withConfig({displayName:"Vote___StyledSvgIcon2",componentId:"sc-adxtcd-1"})({"--tw-text-opacity":"1",color:"rgba(56, 161, 105, var(--tw-text-opacity))",fontSize:"32px"}),ot=s(V).withConfig({displayName:"Vote___StyledSvgIcon3",componentId:"sc-adxtcd-2"})({"--tw-text-opacity":"1",color:"rgba(203, 213, 224, var(--tw-text-opacity))",fontSize:"32px"}),it=s(V).withConfig({displayName:"Vote___StyledSvgIcon4",componentId:"sc-adxtcd-3"})({"--tw-text-opacity":"1",color:"rgba(56, 161, 105, var(--tw-text-opacity))",fontSize:"32px"});const pe=({handleDelete:e,bodyType:n})=>{const[r,i]=x.exports.useState(!1),o=()=>{i(!0)},m=()=>{i(!1)},h=()=>{e(),m()};return l("div",{style:{display:"inline"},children:[t(E,{onClick:o,children:"Delete"}),r&&l(Se,{onClose:m,children:[t(fe,{children:"Confirm Delete"}),t(Ce,{children:t("p",{children:`Are you sure you want to delete your ${n||"question"}?`})}),l(be,{children:[t(rt,{onClick:m,children:"Cancel"}),t(E,{onClick:h,color:"primary",children:"Delete"})]})]})]})};var rt=s(E).withConfig({displayName:"DeleteDialog___StyledLightButton",componentId:"sc-w7kwp8-0"})({marginRight:"0.25rem"});const st=({comment:e,user:n,quesAnsId:r,editComment:i,deleteComment:o})=>{const[m,h]=x.exports.useState(!1),[C,y]=x.exports.useState(e.body);x.exports.useEffect(()=>{y(e.body)},[e]);const b=()=>{h(!1)};return t(at,{children:m?l(pt,{onSubmit:S=>{S.preventDefault(),i(C,e._id,r),b()},children:[t(j,{tag:"textarea",value:C,required:!0,fullWidth:!0,placeholder:"Enter at least 15 characters",rows:2,onChange:S=>y(S.target.value)}),l("div",{children:[t(E,{type:"submit",style:{marginRight:9},children:"Update Comment"}),t(E,{onClick:()=>h(!1),children:"Cancel"})]})]}):l("div",{children:[l(dt,{children:[e.body," \u2013"," ",t(lt,{to:`/user/${e.author.username}`,children:e.author.username}),t("span",{children:` ${Ae(e.createdAt)} `}),t(ct,{children:e.createdAt!==e.updatedAt&&"(edited)"})]}),n&&n._id===e.author._id&&t(mt,{onClick:()=>h(!0),children:"edit"}),n&&n._id===e.author._id&&t(pe,{bodyType:"comment",handleDelete:()=>o(e._id,r)})]})})};var at=s("div").withConfig({displayName:"Comment___StyledDiv",componentId:"sc-z6b6z5-0"})({marginTop:"0.25rem",marginBottom:"0.25rem"}),dt=s("p").withConfig({displayName:"Comment___StyledP",componentId:"sc-z6b6z5-1"})({fontSize:"0.75rem",wordBreak:"break-all",display:"inline",marginRight:"0.5rem"}),lt=s(me).withConfig({displayName:"Comment___StyledLink",componentId:"sc-z6b6z5-2"})({}),ct=s("span").withConfig({displayName:"Comment___StyledSpan",componentId:"sc-z6b6z5-3"})({fontSize:".8em"}),mt=s(E).withConfig({displayName:"Comment___StyledLightButton",componentId:"sc-z6b6z5-4"})({marginRight:"0.25rem"}),pt=s("form").withConfig({displayName:"Comment___StyledForm",componentId:"sc-z6b6z5-5"})({marginTop:"0.75rem"});const ut=J({commentBody:K().min(15,"Must be at least 15 characters")}),yt=({user:e,comments:n,addComment:r,editComment:i,deleteComment:o,quesAnsId:m})=>{var O;const[h,C]=x.exports.useState(!0),[y,b]=x.exports.useState(!1),{register:D,handleSubmit:S,reset:v,formState:{errors:p}}=Z({mode:"onChange",resolver:ee(ut)}),T=()=>{b(!1)},q=()=>{C(!1)},z=({commentBody:$})=>{r($,m),q(),T(),v()},I=h?n.slice(0,3):n;return l("div",{children:[n.length!==0&&t(vt,{}),I.map($=>t(gt,{children:t(st,{comment:$,user:e,quesAnsId:m,editComment:i,deleteComment:o})},$==null?void 0:$._id)),I.length!==n.length?l(E,{onClick:q,children:["show ",n.length-I.length," more comments"]}):e&&!y&&t(E,{onClick:()=>b(!0),children:"add a comment"}),y&&l(ht,{onSubmit:S(z),children:[t(j,k(A({tag:"textarea"},D("commentBody")),{required:!0,placeholder:"Enter at least 15 characters",rows:3,fullWidth:!0,error:"commentBody"in p,helperText:"commentBody"in p?(O=p==null?void 0:p.commentBody)==null?void 0:O.message:""})),l("div",{children:[t(E,{type:"submit",style:{marginRight:9},children:"Add Comment"}),t(E,{onClick:()=>b(!1),children:"Cancel"})]})]})]})};var vt=s("div").withConfig({displayName:"Comments___StyledDiv",componentId:"sc-b51hkw-0"})({height:"1px","--tw-bg-opacity":"1",backgroundColor:"rgba(203, 213, 224, var(--tw-bg-opacity))"}),gt=s("div").withConfig({displayName:"Comments___StyledDiv2",componentId:"sc-b51hkw-1"})({borderBottom:"1px solid rgba(0,0,0,.08)"}),ht=s("form").withConfig({displayName:"Comments___StyledForm",componentId:"sc-b51hkw-2"})({marginTop:"0.25rem"});function le(e){return x.exports.createElement("svg",A({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 214.155 214.155",style:{enableBackground:"new 0 0 214.155 214.155"},xmlSpace:"preserve"},e),x.exports.createElement("path",{d:"M74.551 193.448 0 118.896l33.136-33.135 41.415 41.415L181.02 20.707l33.135 33.136L74.551 193.448z"}))}const _t=({checked:e,handleAcceptAns:n})=>t(te,{checked:e,icon:t(wt,{children:t(le,{})}),checkedIcon:t(St,{children:t(le,{})}),onClick:n});var wt=s(V).withConfig({displayName:"AcceptAnswer___StyledSvgIcon",componentId:"sc-18y2uux-0"})({"--tw-text-opacity":"1",color:"rgba(203, 213, 224, var(--tw-text-opacity))"}),St=s(V).withConfig({displayName:"AcceptAnswer___StyledSvgIcon2",componentId:"sc-18y2uux-1"})({"--tw-text-opacity":"1",color:"rgba(56, 161, 105, var(--tw-text-opacity))"});const ft=J({editedAnswerBody:K().min(30,"Must be at least 30 characters")});function ue({quesAns:e,voteQuesAns:n,editQuesAns:r,deleteQuesAns:i,addComment:o,editComment:m,deleteComment:h,acceptAnswer:C,isAnswer:y,acceptedAnswer:b,quesAuthor:D}){var ne;const{_id:S,author:v,body:p,tags:T,comments:q,points:z,voted:I,createdAt:O,updatedAt:$}=e,{user:Q}=X(),[M,a]=x.exports.useState(!1),[u,g]=x.exports.useState(p),{register:d,handleSubmit:c,reset:f,formState:{errors:_}}=Z({mode:"onChange",resolver:ee(ft)});x.exports.useEffect(()=>{y&&g(p)},[p,y]);const N=()=>{a(!0)},U=()=>{a(!1)},w=()=>{f(),r(u,S),U()};return l(Ct,{children:[l(bt,{children:[Q?t(Ze,{checked:I===R.Upvote,handleUpvote:n}):t(P,{buttonType:"upvote"}),t(At,{children:z}),Q?t(et,{checked:I===R.Downvote,handleDownvote:n}):t(P,{buttonType:"downvote"}),y&&Q&&Q._id===(D==null?void 0:D._id)&&t(_t,{checked:b===S,handleAcceptAns:C})]}),l(xt,{children:[M?l("form",{onSubmit:c(w),children:[t(j,k(A({tag:"textarea",value:u,fullWidth:!0},d("editedAnswerBody")),{error:"editedAnswerBody"in _,helperText:"editedAnswerBody"in _?(ne=_.editedAnswerBody)==null?void 0:ne.message:"",required:!0,onChange:F=>g(F.target.value),placeholder:"Enter at least 30 characters",rows:4})),l(Qt,{children:[t(E,{style:{marginRight:9},type:"submit",children:"Update Answer"}),t(E,{onClick:()=>a(!1),children:"Cancel"})]})]}):t(Dt,{children:p}),T&&t(kt,{children:T.map(F=>t(Pe,{tag:"a",label:F,href:`/tags/${F}`,styles:{link:{margin:"0 .25em .25em"}}},F))}),l(Bt,{children:[!M&&l(Nt,{children:[Q&&Q._id===v._id&&t(Et,{onClick:y?N:r,children:"Edit"}),Q&&(Q._id===v._id||Q.role==="ADMIN")&&t(pe,{bodyType:y?"answer":"question",handleDelete:i})]}),t(We,{username:v.username,userId:v._id,createdAt:O,updatedAt:$,filledVariant:!0,isAnswer:y})]}),t(yt,{user:Q,comments:q,addComment:o,editComment:m,deleteComment:h,quesAnsId:S})]})]})}var Ct=s("div").withConfig({displayName:"QuesAnsDetails___StyledDiv",componentId:"sc-1pq8sqg-0"})({display:"flex",flexDirection:"row",flexWrap:"nowrap",width:"100%"}),bt=s("div").withConfig({displayName:"QuesAnsDetails___StyledDiv2",componentId:"sc-1pq8sqg-1"})({display:"flex",flexDirection:"column",alignItems:"center"}),At=s("span").withConfig({displayName:"QuesAnsDetails___StyledSpan",componentId:"sc-1pq8sqg-2"})({}),xt=s("div").withConfig({displayName:"QuesAnsDetails___StyledDiv3",componentId:"sc-1pq8sqg-3"})({paddingLeft:"0.75rem",paddingRight:"0.75rem",paddingTop:"0.5rem",width:"100%"}),Dt=s("p").withConfig({displayName:"QuesAnsDetails___StyledP",componentId:"sc-1pq8sqg-4"})({margin:"0",paddingBottom:"0.25rem",fontSize:"0.875rem","--tw-text-opacity":"1",color:"rgba(45, 55, 72, var(--tw-text-opacity))"}),Qt=s("div").withConfig({displayName:"QuesAnsDetails___StyledDiv4",componentId:"sc-1pq8sqg-5"})({}),kt=s("div").withConfig({displayName:"QuesAnsDetails___StyledDiv5",componentId:"sc-1pq8sqg-6"})({display:"flex",flexWrap:"wrap"}),Bt=s("div").withConfig({displayName:"QuesAnsDetails___StyledDiv6",componentId:"sc-1pq8sqg-7"})({display:"flex",flexDirection:"row",flexWrap:"wrap",justifyContent:"space-between",marginTop:"1.25rem",marginBottom:"1.25rem"}),Nt=s("div").withConfig({displayName:"QuesAnsDetails___StyledDiv7",componentId:"sc-1pq8sqg-8"})({display:"inline-block"}),Et=s(E).withConfig({displayName:"QuesAnsDetails___StyledLightButton",componentId:"sc-1pq8sqg-9"})({margin:"0.25rem",padding:"0"});const qt=({sortBy:e,setSortBy:n})=>{const r=i=>{n(i.target.innerText.toUpperCase())};return l(xe,{children:[t(G,{variant:e==="VOTES"?"contained":"outlined",onClick:r,children:"Votes"}),t(G,{variant:e==="NEWEST"?"contained":"outlined",onClick:r,children:"Newest"}),t(G,{variant:e==="OLDEST"?"contained":"outlined",onClick:r,children:"Oldest"})]})},It=({quesId:e,answers:n,acceptedAnswer:r,quesAuthor:i})=>{const{notify:o}=H(),[m,h]=x.exports.useState("VOTES"),[C]=De({onError:a=>{o(B(a),"error")}}),[y]=Qe({onError:a=>{o(B(a),"error")}}),[b]=ke({onError:a=>{o(B(a),"error")}}),[D]=Be({onError:a=>{o(B(a),"error")}}),[S]=Ne({onError:a=>{o(B(a),"error")}}),[v]=Ee({onError:a=>{o(B(a),"error")}}),[p]=qe({onError:a=>{o(B(a),"error")}}),T=(a,u,g)=>{b({variables:{quesId:e,ansId:a,voteType:u},optimisticResponse:{__typename:"Mutation",voteAnswer:{__typename:"Answer",_id:a,voted:u,points:u===R.Upvote?g+1:g-1}}})},q=(a,u)=>{C({variables:{quesId:e,ansId:u,body:a},update:()=>{o("Answer updated!")}})},z=a=>{y({variables:{quesId:e,ansId:a},update:(u,{data:g})=>{const d=u.readQuery({query:L,variables:{quesId:e}}),c=d==null?void 0:d.viewQuestion.answers.filter(_=>(_==null?void 0:_._id)!==(g==null?void 0:g.deleteAnswer)),f=k(A({},d==null?void 0:d.viewQuestion),{answers:c});u.writeQuery({query:L,variables:{quesId:e},data:{viewQuestion:f}}),o("Answer deleted!")}})},I=a=>{D({variables:{quesId:e,ansId:a},optimisticResponse:{acceptAnswer:{_id:e,acceptedAnswer:r===a?null:a,__typename:"Question"}},update:(u,{data:g})=>{g!=null&&g.acceptAnswer.acceptedAnswer?o("Accepted the answer!"):o("Un-accepted the answer.")}})},O=(a,u)=>{S({variables:{ansId:u,body:a},update:(g,{data:d})=>{const c=g.readQuery({query:L,variables:{quesId:e}}),f=c==null?void 0:c.viewQuestion.answers.map(N=>(N==null?void 0:N._id)===u?k(A({},N),{comments:d==null?void 0:d.addAnsComment}):N),_=k(A({},c==null?void 0:c.viewQuestion),{answers:f});g.writeQuery({query:L,variables:{quesId:e},data:{viewQuestion:_}}),o("Comment added to answer!")}})},$=(a,u,g)=>{v({variables:{ansId:g,commentId:u,body:a},update:()=>{o("Comment edited!")}})},Q=(a,u)=>{p({variables:{ansId:u,commentId:a},update:(g,{data:d})=>{const c=g.readQuery({query:L,variables:{quesId:e}}),f=c==null?void 0:c.viewQuestion.answers.find(w=>(w==null?void 0:w._id)===u),_=f==null?void 0:f.comments.filter(w=>(w==null?void 0:w._id)!==(d==null?void 0:d.deleteAnsComment)),N=c==null?void 0:c.viewQuestion.answers.map(w=>(w==null?void 0:w._id)===u?k(A({},w),{comments:_}):w),U=k(A({},c==null?void 0:c.viewQuestion),{answers:N});g.writeQuery({query:L,variables:{quesId:e},data:{viewQuestion:U}}),o("Comment deleted!")}})},M=Ke(m,n,r);return l($t,{children:[M.length!==0&&l(Lt,{children:[l(Tt,{children:[M.length," ",M.length===1?"Answer":"Answers"]}),t(qt,{sortBy:m,setSortBy:h})]}),t("div",{children:M.map(a=>t(zt,{children:t(ue,{quesAns:a,voteQuesAns:u=>T(a._id,u,a.points),editQuesAns:q,deleteQuesAns:()=>z(a._id),acceptAnswer:()=>I(a._id),addComment:O,editComment:$,deleteComment:Q,isAnswer:!0,acceptedAnswer:r,quesAuthor:i})},a._id))})]})};var $t=s("div").withConfig({displayName:"List___StyledDiv",componentId:"sc-1b6fqio-0"})({marginTop:"2.5rem"}),Lt=s("div").withConfig({displayName:"List___StyledDiv2",componentId:"sc-1b6fqio-1"})({display:"flex",justifyContent:"space-between",alignItems:"center",flexWrap:"wrap"}),Tt=s("h2").withConfig({displayName:"List___StyledH",componentId:"sc-1b6fqio-2"})({"--tw-text-opacity":"1",color:"rgba(68, 51, 122, var(--tw-text-opacity))",fontWeight:"400",fontSize:"1.25rem"}),zt=s("div").withConfig({displayName:"List___StyledDiv3",componentId:"sc-1b6fqio-3"})({marginBottom:"0.75rem"});const Mt=r=>{var i=r,{question:e}=i,n=Y(i,["question"]);const{_id:o,answers:m,acceptedAnswer:h,title:C,body:y,tags:b,author:D}=e,{setEditValues:S,notify:v}=H(),p=Ie(),[T]=$e({onError:d=>{v(B(d),"error")}}),[q]=Le({onError:d=>{v(B(d),"error")}}),[z]=Te({onError:d=>{v(B(d),"error")}}),[I]=ze({onError:d=>{v(B(d),"error")}}),[O]=Me({onError:d=>{v(B(d),"error")}}),$=(d,c)=>{T({variables:{quesId:o,voteType:d},optimisticResponse:{__typename:"Mutation",voteQuestion:{__typename:"Question",_id:o,points:d===R.Upvote?c+1:c-1,voted:d}}})},Q=()=>{S({quesId:o,title:C,body:y,tags:b}),p("/ask")},M=()=>{q({variables:{quesId:o},update:()=>{p("/"),v("Question deleted!")}})},a=d=>{z({variables:{quesId:o,body:d},update:(c,{data:f})=>{const _=c.readQuery({query:L,variables:{quesId:o}}),N=k(A({},_==null?void 0:_.viewQuestion),{comments:f==null?void 0:f.addQuesComment});c.writeQuery({query:L,variables:{quesId:o},data:{viewQuestion:N}}),v("Comment added to question!")}})},u=(d,c)=>{I({variables:{quesId:o,commentId:c,body:d},update:()=>{v("Comment edited!")}})},g=d=>{O({variables:{quesId:o,commentId:d},update:(c,{data:f})=>{const _=c.readQuery({query:L,variables:{quesId:o}}),N=_==null?void 0:_.viewQuestion.comments.filter(w=>(w==null?void 0:w._id)!==(f==null?void 0:f.deleteQuesComment)),U=k(A({},_==null?void 0:_.viewQuestion),{comments:N});c.writeQuery({query:L,variables:{quesId:o},data:{viewQuestion:U}}),v("Comment deleted!")}})};return l(Ot,k(A({},n),{children:[t(ue,{quesAns:e,voteQuesAns:d=>$(d,e.points),editQuesAns:Q,deleteQuesAns:M,addComment:a,editComment:u,deleteComment:g}),t(It,{quesId:o,answers:m,acceptedAnswer:h,quesAuthor:D}),t(je,{quesId:o,tags:b})]}))};var Ot=s("div").withConfig({displayName:"Content___StyledDiv",componentId:"sc-kuaxdy-0"})({borderTop:"1px solid lightgray"});const ce=s.div.withConfig({displayName:"Question__Container",componentId:"sc-qcm1x0-0"})({padding:"0.5rem",width:"100%"}),Rt=s.div.withConfig({displayName:"Question__Header",componentId:"sc-qcm1x0-1"})({}),Zt=()=>{const{clearEdit:e,notify:n}=H(),{user:r}=X(),{quesId:i}=Oe(),[o,m]=x.exports.useState(null),[h,{data:C,loading:y}]=Re({onError:p=>{n(B(p),"error")}});if(x.exports.useEffect(()=>{i&&h({variables:{quesId:i}})},[i]),x.exports.useEffect(()=>{C&&m(C.viewQuestion)},[C]),y||!o)return t(ce,{children:t(Ve,{})});const{title:b,views:D,createdAt:S,updatedAt:v}=o;return l(ce,{children:[l(Rt,{children:[l(Vt,{children:[t(Ut,{children:b}),r?t(Ft,{children:t(Wt,{to:"/ask",onClick:()=>e(),children:"Ask Question"})}):t(P,{buttonType:"ask"})]}),l(Pt,{children:[l("span",{children:["Asked ",l("strong",{children:[de(S)," ago"]})]}),S!==v&&l(Ht,{children:["Edited ",l("strong",{children:[de(v)," ago"]})]}),l(jt,{children:["Viewed ",l("strong",{children:[D," times"]})]})]})]}),t(Mt,{question:o})]})};var Vt=s("div").withConfig({displayName:"Question___StyledDiv",componentId:"sc-qcm1x0-2"})({display:"flex",flexWrap:"nowrap",flexDirection:"column","@media (min-width: 640px)":{justifyContent:"space-between",alignItems:"center",flexDirection:"row"}}),Ut=s("h1").withConfig({displayName:"Question___StyledH",componentId:"sc-qcm1x0-3"})({margin:"0",marginBottom:"0.25rem",fontWeight:"400",fontSize:"1.5rem",wordWrap:"break-word"}),Ft=s("div").withConfig({displayName:"Question___StyledDiv2",componentId:"sc-qcm1x0-4"})({padding:"0",margin:"0",marginLeft:"0.5rem",verticalAlign:"baseline",order:"-1",alignSelf:"flex-end","@media (min-width: 640px)":{order:"0",alignSelf:"auto"}}),Wt=s(Ue).withConfig({displayName:"Question___StyledLink",componentId:"sc-qcm1x0-5"})({textDecoration:"none",paddingLeft:"1rem",paddingRight:"1rem",paddingTop:"0.5rem",paddingBottom:"0.5rem","--tw-bg-opacity":"1",backgroundColor:"rgba(49, 130, 206, var(--tw-bg-opacity))","--tw-text-opacity":"1",color:"rgba(255, 255, 255, var(--tw-text-opacity))",fontSize:"0.75rem",borderRadius:"0.125rem",lineHeight:"1",whiteSpace:"nowrap",display:"inline-block"}),Pt=s("div").withConfig({displayName:"Question___StyledDiv3",componentId:"sc-qcm1x0-6"})({paddingBottom:"0.5rem",fontSize:"0.75rem",marginBottom:"0.5rem"}),Ht=s("span").withConfig({displayName:"Question___StyledSpan",componentId:"sc-qcm1x0-7"})({marginLeft:"0.5rem"}),jt=s("span").withConfig({displayName:"Question___StyledSpan2",componentId:"sc-qcm1x0-8"})({marginLeft:"0.5rem"});export{Zt as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
